```{r Library}
library(haven)
library(tidyverse)
library(questionr)
library(labelled)
library(gridExtra)
library(gmodels)
library(grid)
library(gtable)
library(factoextra)
library(FactoMineR)
library(ade4)
```


```{r Création de fonction utile}

#Calcul la table des efféctifs, fréquence, effective cum, fréquence cum

triaplat <- function (data,k) {
  a = freq(data[k])
freq <- cbind(a[c(1,2)],cumsum(a[c(1,2)]))
n = nrow(freq)
test = matrix(0, n, 2)

for (i in 1:n) {
 
  t = prop.test(freq$n[i], sum(freq$n))
  test[i,1] <- t$conf.int[1]
  test[i,2] <- t$conf.int[2]
  
}

freq <- cbind(freq, test)
colnames(freq) <- c("Effectif", "Fréquence", "Effectif_Cumulé", "Fréquence_cumulé", "Borneinferieur", "Borne_supérieur")
freq

  
}

#Permet de tracé un tableau sur un PDF et utilise le package grid et gtable

TraceTable <- function (titre,fn,Data) {
  table <- tableGrob(Data)


title <- textGrob(titre,gp=gpar(fontsize=20))
footnote <- textGrob(fn, x=0, hjust=0,
                     gp=gpar( fontface="italic"))

padding <- unit(0.5,"line")
table <- gtable_add_rows(table, 
                         heights = grobHeight(title) + padding,
                         pos = 0)
table <- gtable_add_rows(table, 
                         heights = grobHeight(footnote)+ padding)
table <- gtable_add_grob(table, list(title, footnote),
                         t=c(1, nrow(table)), l=c(1,2), 
                         r=ncol(table))
grid.newpage()
grid.draw(table)
}

```



```{r Import}

Survey <-read_sas("UGPR7HFL.SAS7BDAT")
```


```{r Choix des variable}

survey <- Survey %>% select(HHID, HV005, HV009, HV014, HV024:HV026, HV201:HV228, HV044, HV106, HV107, HV104, HV122, SHCD3B, SHCD3D:SHCD3K)

#Suppression des variables HV026 et HV202 qui possèdent trop de valeurs manquantes 
survey <- survey[,-7]
survey <- survey[,-8]

#Calcul la colonne cviolence qui regroupe tous les méthodes de disciple impliquant de la violence physique

violence = rep(0,length(survey[[1]]))

for (i in 1:length(survey[[1]])) {
    ToF <- 0
    for (j in 40:44) {
      ToF <- ToF + survey[[i,j]]
    }
  violence[i] <- as.logical(ToF)
  }

survey <- survey %>% cbind(violence)
survey <- survey %>% select(-SHCD3F,-SHCD3G,-SHCD3H,-SHCD3I,-SHCD3J,-SHCD3K)

colnames(survey) <- c("cHHID", 
                          "cHV005", 
                          "cHV009", 
                          "cHV014",
                          "cHV024", 
                          "cHV025",
                          "cHV201", 
                          "cHV201A", 
                          "cHV204",
                          "cHV205", 
                          "cHV206", 
                          "cHV207", 
                          "cHV208", 
                          "cHV209",
                          "cHV210",
                          "cHV211",
                          "cHV212", 
                          "cHV213", 
                          "cHV214",
                          "cHV215",
                          "cHV216",
                          "cHV217",
                          "cHV218",
                          "cHV219",
                          "cHV220",
                          "cHV221",
                          "cHV225",
                          "cHV226",
                          "cHV227",
                          "cHV228",
                          "cHV044",
                          "cHV106",
                          "cHV107",
                          "cHV104",
                          "cHV122",
                          "cSHCD3B",
                          "cSHCD3D",
                          "cSHCD3E",
                          "cviolence")

var_label(survey) <- list(cHHID = "Identifiant", 
                          cHV005 = "Poids de l'échantillon du ménage", 
                          cHV009 = "Nombre de membres du ménage", 
                          cHV014 = "Nombre d'enfant de 5 ans et moins",
                          cHV024 = "Region", 
                          cHV025 = "Type du lieu de résidence",
                          cHV201 =  "Source d'eau potable", 
                          cHV201A ="Eau non disponible pendant au moins 1 jour", 
                          cHV204 ="Temps pour se rendre à la source d'eau (en min)",
                          cHV205 ="Type d'installations sanitaires", 
                          cHV206 ="Possède l'électricité", 
                          cHV207 ="Possède une radio", 
                          cHV208 ="Possède une télévision", 
                          cHV209 ="Possède un réfrigérateur",
                          cHV210 ="Possède un vélo",
                          cHV211 ="Possède une moto/scooter",
                          cHV212 ="Possède une voiture/camion", 
                          cHV213 ="Matériau du rez de chaussée", 
                          cHV214 ="Matériau du mur principal",
                          cHV215 ="Matériau du toit principal",
                          cHV216 ="Nombre de pièces utilisées pour dormir",
                          cHV217 ="Structure des relations",
                          cHV218 ="Numéro de ligne du chef de famille",
                          cHV219 ="Sexe du chef de famille",
                          cHV220 ="Age du chef de famille",
                          cHV221 ="Possède un téléphone fixe",
                          cHV225 ="Partage les toilettes avec d'autres ménages",
                          cHV226 ="Type de combustible de cuisson",
                          cHV227 ="Possède une moustiquaire",
                          cHV228 ="Enfant de moins de 5 ans dormant sous une moustiquaire",
                          cHV044 ="Ménage sélectionné pour le module sur la violence domestique",
                          cHV106 ="Niveau d'éducation le plus élevé atteint",
                          cHV107 ="Années d'études la plus élevée",
                          cHV104 ="Sexe du membre du ménage",
                          cHV122 ="Niveau d'éducation durant l'année scolaire scolaire en cours",
                          cSHCD3B = "Méthodes de discipline : expliquer le pourquoi du comportement",
                          cSHCD3D ="Méthodes de discipline : Crié ou hurlé",
                          cSHCD3E ="Méthodes de discipline : Chantage",
                          cviolence ="Méthodes de discipline : Violence physique")

```

```{r Application de Format}

menage <- survey

menage[5] <- as.character(menage[[5]])
menage[5] <- fct_recode(menage[[5]],
                        "Kampala" = "0", 
                        "Central" = "1",
                        "Central 2" = "2",
                        "Busoga" = "3",
                        "Bukedi" = "4",
                        "Bugishu" = "5",
                        "Teso" = "6",
                        "Karamoja" = "7",
                        "Lango" = "8",
                        "Acholi" = "9",
                        "West Nile" = "10",
                        "Bunyoro" = "11",
                        "Tooro" = "12",
                        "Ankole" = "13",
                        "Kigezi" = "14")


menage[6] <- as.character(menage[[6]])
menage[6] <- fct_recode(menage[[6]],
                        "Urban" = "1",  
                        "Rural" = "2")

menage[7] <- as.character(menage[[7]])
menage[7] <- fct_recode(menage[[7]],
                              "PIPED WATER" = "10",
                              "Piped into dwelling" = "11",
                              "Piped to yard/plot" = "12",
                              "Piped to neighbor" = "13",
                              "Public tap/standpipe" = "14",
                              "TUBE WELL WATER" = "20",
                               "Tube well or borehole" = "21", 
                               "DUG WELL (OPEN/PROTECTED)" = "30",
                               "Protected well" = "31",
                               "Unprotected well" = "32",
                               "SURFACE FROM SPRING" = "40",
                               "Protected spring" = "41",
                               "Unprotected spring" = "42",
                               "River/dam/lake/ponds/stream/canal/irrigation channel" = "43",  
                               "Rainwater" = "51",  
                               "Tanker truck" = "61",  
                               "Cart with small tank" = "62",  
                               "Bicycle with jerrycans" = "63",  
                               "Bottled water" =  "71",  
                               "Sachet water" = "72",  
                                "Other" = "96") 


menage[9] <- as.character(menage[[9]])
menage[9] <- fct_recode(menage[[9]],
"No, not interrupted for a full day" = "0",
"Yes, interrupted for a full day or more" = "1" ,
NULL = "8",
NULL = "9")


menage[10] <- as.character(menage[[10]])
menage[10] <- fct_recode(menage[[10]],
"FLUSH TOILET" = "10",
"Flush to piped sewer system" = "11",
"Flush to septic tank" = "12",
"Flush to pit latrine = 13",
"Flush to somewhere else" = "14",
"Flush, don't know where" = "15" ,
"PIT TOILET LATRINE" = "20",
"Ventilated Improved Pit latrine (VIP)" = "21",
"Pit latrine with slab" = "22",
"Pit latrine without slab/open pit" = "23",
"NO FACILITY" = "30",
"No facility/bush/field" = "31",
"Composting toilet / ECOSAN" = "41",
"Bucket toilet" = "42",
"Hanging toilet/latrine" = "43",
"Other" = "96",
NULL = "99")


for (i in 11:17) {
menage[i] <- as.character(menage[[i]])
menage[i] <- fct_recode(menage[[i]],
"No" = "0" ,
"Yes"= "1",
NULL = "9")
}


menage[18] <- as.character(menage[[18]])
menage[18] <- fct_recode(menage[[18]],
"NATURAL"="10",  
"Earth/Sand" = "11", 
"Dung" = "12",
"RUDIMENTARY" = "20", 
"Wood planks" = "21", 
"Palm/bamboo"="22",
"FINISHED"="30",
"Parquet or polished wood"="31",  
"Concrete" = "32" , 
"Ceramic tiles" = "33",  
"Cement screed" = "34", 
"Carpet" = "35",
"Stones" = "36", 
"Bricks" = "37",
"Other"= "96",
NULL = "99")


menage[19] <- as.character(menage[[19]])
menage[19] <- fct_recode(menage[[19]],
"No walls" = "11",
"Tatchd/straw" = "12",
"Dirt" = "13", 
"RUDIMENTARY" = "20", 
"Poles with mud" = "21",
"Stone with mud" = "22", 
"Unburnt bricks with mud" = "23", 
"Plywood" = "24",
"Cardboard" = "25",
"Reused wood" = "26",
"Unburnt bricks with plaster" = "27",
"Burnt bricks with mud" = "28",
"FINISHED" = "30",
"Cement" = "31",
"Stone with lime/cement" = "32", 
"Burnt bricks with cement" = "33",
"Cement blocks" = "34",
"Unburnt bricks with cement" = "35", 
"Wood planks/shingles" = "36", 
"Other" = "96", 
NULL="99")


menage[20] <- as.character(menage[[20]])
menage[20] <- fct_recode(menage[[20]],
'NATURAL'= '10',
'No roof '= '11',
'Thatch/palm/leaf'= '12',
'Mud' = '13',
'RUDIMENTARY' = '20',
'Rustic mat' ='21',
'Tins' = '22',
'Wood planks' = '23',
'Cardboard' = '24',
'Tarpaulin' = '25', 
'FINISHED'= '30', 
'Iron sheets' = '31', 
'Wood' = '32',
'Asbestos' = '33',
'Tiles'='34',
'Concrete' = '35',
'Roofing shingles' = '36',
'Other' = "96",
NULL = '99')


menage[22] <- as.character(menage[[22]])
menage[22] <- fct_recode(menage[[22]],
'No adults' = '0',
'One adult' = '1',
'Two adults, opposite sex'='2',
'Two adults, same sex' = '3',
'Three+ related adults' = '4',
'Unrelated adults'='5')


menage[24] <- as.character(menage[[24]])
menage[24] <- fct_recode(menage[[24]],
'Male' = '1' ,
'Female' = '2',
NULL ='9')


for (i in 26:27) {
menage[i] <- as.character(menage[[i]])
menage[i] <- fct_recode(menage[[i]],
'No' = '0',
'Yes' = '1', 
NULL = '9')
}


menage[28] <- as.character(menage[[28]])
menage[28] <- fct_recode(menage[[28]],
'Electricity' = '1',
'LPG' = '2',
'Biogas' = '4',
'Kerosene' = '5',
'Charcoal'='7',
'Wood' = '8',
'Straw/shrubs/grass' = '9',
'Agricultural crop' = '10', 
'Animal dung' = "11",
'No food cooked in house' ="95",
'Other' = "96",
NULL = "99")


menage[29] <- as.character(menage[[29]])
menage[29] <- fct_recode(menage[[29]],
'No' = '0',
'Yes' = '1', 
NULL = '9')
                         

menage[31] <- as.character(menage[[31]])
menage[31] <- fct_recode(menage[[31]],
 'Household not selected' = '0',
'Household selected'='1')


menage[32] <- as.character(menage[[32]])
menage[32] <- fct_recode(menage[[32]],
'No education,preschool' = '0',
'Primary'= '1',
'Secondary'='2',
'Higher' ='3', 
"Don't know" = "8",
NULL = "9")


menage[34] <- as.character(menage[[34]])
menage[34] <- fct_recode(menage[[34]],
'Male'='1',
'Female'='2',
NULL = '9')


menage[35] <- as.character(menage[[35]])
menage[35] <- fct_recode(menage[[35]],
'No education,Preschool' = '0',
'Primary'='1',
'Secondary'= '2',
'Higher' = '3',
"Don't know" = '8',
NULL = '9')




for (i in 36:39) {
menage[i] <- as.character(menage[[i]])
menage[i] <- fct_recode(menage[[i]],
"No" = "0" ,
"Yes"= "1",
NULL = "9")
}

write_rds(menage, "menage.rds")
```



```{r Prétraitement}
for (i in c(3:8,10:24,26:39)) {
  menage[i] <- as.factor(menage[[i]])
}

for (i in c(1,2,9,25)) {
  menage[i] <- as.numeric(menage[[i]])
}

var_label(menage) <- list(cHHID = "Identifiant", 
                          cHV005 = "Poids de l'échantillon du ménage", 
                          cHV009 = "Nombre de membres du ménage", 
                          cHV014 = "Nombre d'enfant de 5 ans et moins",
                          cHV024 = "Region", 
                          cHV025 = "Type du lieu de résidence",
                          cHV201 =  "Source d'eau potable", 
                          cHV201A ="Eau non disponible pendant au moins 1 jour", 
                          cHV204 ="Temps pour se rendre à la source d'eau (en min)",
                          cHV205 ="Type d'installations sanitaires", 
                          cHV206 ="Possède l'électricité", 
                          cHV207 ="Possède une radio", 
                          cHV208 ="Possède une télévision", 
                          cHV209 ="Possède un réfrigérateur",
                          cHV210 ="Possède un vélo",
                          cHV211 ="Possède une moto/scooter",
                          cHV212 ="Possède une voiture/camion", 
                          cHV213 ="Matériau du rez de chaussée", 
                          cHV214 ="Matériau du mur principal",
                          cHV215 ="Matériau du toit principal",
                          cHV216 ="Nombre de pièces utilisées pour dormir",
                          cHV217 ="Structure des relations",
                          cHV218 ="Numéro de ligne du chef de famille",
                          cHV219 ="Sexe du chef de famille",
                          cHV220 ="Age du chef de famille",
                          cHV221 ="Possède un téléphone fixe",
                          cHV225 ="Partage les toilettes avec d'autres ménages",
                          cHV226 ="Type de combustible de cuisson",
                          cHV227 ="Possède une moustiquaire",
                          cHV228 ="Enfant de moins de 5 ans dormant sous une moustiquaire",
                          cHV044 ="Ménage sélectionné pour le module sur la violence domestique",
                          cHV106 ="Niveau d'éducation le plus élevé atteint",
                          cHV107 ="Années d'études la plus élevée",
                          cHV104 ="Sexe du membre du ménage",
                          cHV122 ="Niveau d'éducation durant l'année scolaire scolaire en cours",
                          cSHCD3B = "Méthodes de discipline : expliquer le pourquoi du comportement",
                          cSHCD3D ="Méthodes de discipline : Crié ou hurlé",
                          cSHCD3E ="Méthodes de discipline : Chantage",
                          cviolence ="Méthodes de discipline : Violence physique")

```

```{r Description}

describe(menage) 

```





```{r Tri à plat : Graph}


pdf(file = "Graph.PDF",
    width = 10,
    height = 7)

#3
c = data.frame(Type = c(1:19,20:22,27))
c = cbind(c, triaplat(survey,3))

grid.table(round(triaplat(survey,3),digits = 2))

ggplot(c, aes(x = Type)) +
  geom_col(aes(y = Fréquence)) +
  labs(title = "Nombre de membre du ménage")


#4
plot.new()
grid.table(round(triaplat(survey,4),digits = 2))

c = data.frame(Type = c(0:9))
c = cbind(c, triaplat(survey,4))

ggplot(c, aes(x = Type)) +
  geom_col(aes(y = Fréquence)) +
  labs(title = "Nombre de membre du ménage'enfant de moins de 5ans")



#6
plot.new()
grid.table(round(triaplat(survey,6),digits = 2))

a = data.frame(Type = c("Urbain", "Rural"))
a = cbind(a, triaplat(survey,6))

posa = a$Fréquence_cumulé - 0.5 * a$Fréquence
ggplot(a, aes(x = "", y = Fréquence, fill = Type)) +
  geom_bar(width = 1, stat = "identity", color = "white") +
  coord_polar("y", start = 0) +
  geom_text(aes(y = posa, label = Fréquence), color = "black") +
  theme_void()  +
  labs(title = "Type du lieu d'habitation")

#11
plot.new()
grid.table(round(triaplat(survey,11),digits = 2))

b = data.frame(Type = c("Non", "Oui"))
b = cbind(b, triaplat(survey,11))

ggplot(b, aes(x = "", y = Fréquence, fill = Type)) +
  geom_bar(width = 1, stat = "identity", color = "white") +
  coord_polar("y", start = 0) +
  geom_text(aes(y = c(60,15), label = Fréquence), color = "black") +
  theme_void() +
  labs(title = "Les ménages possèdent-t-ils l'éléctrécité")


#13
plot.new()
grid.table(round(triaplat(survey,13),digits = 2))

b = data.frame(Type = c("Non", "Oui"))
b = cbind(b, triaplat(survey,13))

ggplot(b, aes(x = "", y = Fréquence, fill = Type)) +
  geom_bar(width = 1, stat = "identity", color = "white") +
  coord_polar("y", start = 0) +
  geom_text(aes(y = c(60,7), label = Fréquence), color = "black") +
  theme_void() +
  labs(title = "Les ménages possèdent-t-ils la télévision")

#21
plot.new()
grid.table(round(triaplat(survey,21),digits = 2))

c = data.frame(Type = c(1:12,14,22,24))
c = cbind(c, triaplat(survey,21))

ggplot(c, aes(x = Type)) +
  geom_col(aes(y = Fréquence)) +
  labs(title = "Nombre de pièce utilisé pour dormir")

#28
plot.new()
grid.table(round(triaplat(survey,28),digits = 2))

c = data.frame(Type = c("Electricité",
                        "GPL",
                        "Biogaze",
                        "Kerosene",
                        "Charbon",
                        "Bois",
                        "Paille/arbustes/herbe",
                        "Récolte Agricole",
                        #"Fumier Animal",
                        "Pas de nourriture cuisiné à la maison",
                        "Autre"
                        #"Pas de données"
                        ))
c = cbind(c, triaplat(survey,28))


ggplot(c, aes(x = Type)) +
  geom_col(aes(y = Fréquence)) +
  labs(title = "Type de combustion de cuisson")

#32
plot.new()
grid.table(round(triaplat(survey,32),digits = 2))

c = data.frame(Type = c("Pas d'éducation, Maternelle",
                        "Primaire",
                        "Collège, Lycée",
                        "Superieur",
                        "Ne sait pas"))
c = cbind(c, triaplat(survey,32))

ggplot(c, aes(x = Type)) +
  geom_col(aes(y = Fréquence)) +
  labs(title = "Niveau d'étude")


#33
plot.new()
grid.table(round(triaplat(survey,33),digits = 2))

c = data.frame(Type = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "Ne sais pas", "Pas de donnée"))
c = cbind(c, triaplat(survey,33))


ggplot(c, aes(x = Type)) +
  geom_col(aes(y = Fréquence)) +
  labs(title = "Année d'étude")



#34
plot.new()
grid.table(round(triaplat(survey,34),digits = 2))

d = data.frame(Type = c('Homme', 'Femme'))
d = cbind(d, triaplat(survey,34))



ggplot(d, aes(x = "", y = Fréquence, fill = Type)) +
  geom_bar(width = 1, stat = "identity", color = "white") +
  coord_polar("y", start = 0) +
  geom_text(aes(y = c(25, 75), label = Fréquence), color = "black") +
  theme_void()  +
  labs(title = "Sexe du membre du ménage")


#36
plot.new()
grid.table(round(triaplat(survey,36),digits = 2))

d = data.frame(Type = c("Non", "Oui", "Pas de donnée"))
d = cbind(d, triaplat(survey,36))



posd = d$Fréquence_cumulé - 0.5 * d$Fréquence
ggplot(d, aes(x = "", y = Fréquence, fill = Type)) +
  geom_bar(width = 1, stat = "identity", color = "white") +
  coord_polar("y", start = 0) +
  geom_text(aes(y = c(90,45,5), label = Fréquence), color = "black") +
  theme_void()  +
  labs(title = "Méthode de discipline : expliquer le pourquoi du comportement")



#37
plot.new()
grid.table(round(triaplat(survey,37),digits = 2))

d = data.frame(Type = c("Non", "Oui", "Pas de donnée"))
d = cbind(d, triaplat(survey,37))



posd = d$Fréquence_cumulé - 0.5 * d$Fréquence
ggplot(d, aes(x = "", y = Fréquence, fill = Type)) +
  geom_bar(width = 1, stat = "identity", color = "white") +
  coord_polar("y", start = 0) +
  geom_text(aes(y = c(85,40,5), label = Fréquence), color = "black") +
  theme_void()  +
  labs(title = "Méthode de discipline : crier ou hurler")


#38
plot.new()
grid.table(round(triaplat(survey,38),digits = 2))

d = data.frame(Type = c("Non", "Oui", "Pas de donnée"))
d = cbind(d, triaplat(survey,38))



posd = d$Fréquence_cumulé - 0.5 * d$Fréquence
ggplot(d, aes(x = "", y = Fréquence, fill = Type)) +
  geom_bar(width = 1, stat = "identity", color = "white") +
  coord_polar("y", start = 0) +
  geom_text(aes(y = c(75, 30, 5), label = Fréquence), color = "black") +
  theme_void()  +
  labs(title = "Méthode de discipline : chantage")



#39
plot.new()
grid.table(round(triaplat(survey,39),digits = 2))

d = data.frame(Type = c("Non", "Oui", "Pas de donnée"))
d = cbind(d, triaplat(survey,39))



posd = d$Fréquence_cumulé - 0.5 * d$Fréquence
ggplot(d, aes(x = "", y = Fréquence, fill = Type)) +
  geom_bar(width = 1, stat = "identity", color = "white") +
  coord_polar("y", start = 0) +
  geom_text(aes(y = c(85,40,5), label = Fréquence), color = "black") +
  theme_void()  +
  labs(title = "Usage de la violence comme méthode de discipline")


dev.off()




```







```{r Tri croisé}

#Croisement bivariés
tab1 <- table(menage$cHV106,menage$cHV206) # Niveau d'éducation le plus élevés atteint croisés avec possède l'electricité
tab2 <- table(menage$cHV024,menage$cHV106)# Niveau d'éducation le plus élevés atteint croisés avec les différentes régions
tab3 = table(menage$cHV106,menage$cHV014) #Niveau d'etude le plus haut atteint croisés avec le nombre d'enfant dans le ménage 
tab4 = table(menage$cviolence,menage$cHV106) #Violence croisés avec niveau d'education durant l'année scolaire en cours
tab5 = table(menage$cSHCD3B,menage$cHV106) #Methode de discipline expliqué le pourquoi du comment croisés avec le niveau d'éducation le plus élevés atteint
tab6 = table(menage$cHV106,menage$cSHCD3D) #Methode de discipline: crié ou hurlé  croisés avec le niveau d'éducation le plus élevés atteint
tab7 = table(menage$cSHCD3E,menage$cHV106)  #Methode de discipline : chantage croisés avec le niveau d'éducation le plus élevés atteint





pdf(file = "test1.PDF",
    width = 6,
    height = 3)


  b = chisq.test(tab1)
  a = CrossTable(tab1, na.rm = TRUE)
  TraceTable("Table",
             "Niveau d'éducation le plus élevés atteint croisés avec possède l'electricité", 
             a[["t"]])
  TraceTable("Table théorique",
             "Niveau d'éducation le plus élevés atteint croisés avec possède l'electricité",
             round(b[["expected"]],digits = 2))
  TraceTable("Profil ligne",
             "Niveau d'éducation le plus élevés atteint croisés avec possède l'electricité",
             round(a[["prop.row"]],digits = 2))
  TraceTable("Profil colonne", 
             "Niveau d'éducation le plus élevés atteint croisés avec possède l'electricité",
             round(a[["prop.col"]],digits = 2))
  TraceTable("P-value",
             "Niveau d'éducation le plus élevés 
             atteint croisés avec possède 
             l'electricité",
             round(data.frame(chi_2 = b[["statistic"]][["X-squared"]] ,p_value = b[["p.value"]], digits = 2 )))
dev.off()
  
  


  
pdf(file = "test2.PDF",
    width = 8,
    height = 6)
  
  b = chisq.test(tab2)
  a = CrossTable(tab2, na.rm = TRUE)
  TraceTable("Table",
             "Niveau d'éducation le plus élevés atteint croisés avec les différentes régions",
             a[["t"]])
  TraceTable("Table théorique",
             "Niveau d'éducation le plus élevés atteint croisés avec les différentes régions",
             round(b[["expected"]],digits = 2))
  TraceTable("Profil ligne",
             "Niveau d'éducation le plus élevés atteint croisés avec les différentes régions",
             round(a[["prop.row"]],digits = 2))
  TraceTable("Profil colonne", 
             "Niveau d'éducation le plus élevés atteint croisés avec les différentes régions",
             round(a[["prop.col"]],digits = 2))
  TraceTable("P-value",
             "Niveau d'éducation le plus élevés atteint croisés avec les différentes régions",
             round(data.frame(chi_2 = b[["statistic"]][["X-squared"]] ,p_value = b[["p.value"]], digits = 2 ) ) )  
dev.off()

pdf(file = "test3.PDF",
    width = 10,
    height = 4)
  
  b = chisq.test(tab3)
  a = CrossTable(tab3, na.rm = TRUE)
  TraceTable("Table",
             "Niveau d'etude le plus haut atteint croisés avec le nombre d'enfant dans le ménage ", 
             a[["t"]])
  TraceTable("Table théorique",
             "Niveau d'etude le plus haut atteint croisés avec le nombre d'enfant dans le ménage ",
             round(b[["expected"]],digits = 2))
  TraceTable("Profil ligne",
             "Niveau d'etude le plus haut atteint croisés avec le nombre d'enfant dans le ménage ",
             round(a[["prop.row"]],digits = 2))
  TraceTable("Profil colonne", 
             "Niveau d'etude le plus haut atteint croisés avec le nombre d'enfant dans le ménage ",
             round(a[["prop.col"]],digits = 2))
  TraceTable("P-value",
             "Niveau d'etude le plus haut atteint croisés avec le nombre d'enfant dans le ménage ",
             round(data.frame(chi_2 = b[["statistic"]][["X-squared"]] ,p_value = b[["p.value"]], digits = 2 ) ) )  
dev.off()




pdf(file = "test4.PDF",
    width = 8,
    height = 4)
  
  b = chisq.test(tab4)
  a = CrossTable(tab4, na.rm = TRUE)
  TraceTable("Table",
             "Violence croisés avec niveau d'education durant l'année scolaire en cours", 
             a[["t"]])
  TraceTable("Table théorique",
             "Violence croisés avec niveau 
             d'education durant l'année scolaire en cours",
             round(b[["expected"]],digits = 2))
  TraceTable("Profil ligne",
             "Violence croisés avec niveau d'education durant l'année scolaire en cours",
             round(a[["prop.row"]],digits = 2))
  TraceTable("Profil colonne", 
             "Violence croisés avec niveau d'education durant l'année scolaire en cours",
             round(a[["prop.col"]],digits = 2))
  TraceTable("P-value",
             "Violence croisés avec niveau d'education durant l'année scolaire en cours",
             round(data.frame(chi_2 = b[["statistic"]][["X-squared"]] ,p_value = b[["p.value"]], digits = 2 ) ) )  
dev.off()



pdf(file = "test5.PDF",
    width = 8,
    height = 3)
  
  b = chisq.test(tab5)
  a = CrossTable(tab5, na.rm = TRUE)
  TraceTable("Table",
             "Methode de discipline expliqué le pourquoi du comment croisés avec le niveau d'éducation le plus élevés atteint", 
             a[["t"]])
  TraceTable("Table théorique",
             "Methode de discipline expliqué le pourquoi du comment croisés avec le niveau d'éducation le plus élevés atteint",
             round(b[["expected"]],digits = 2))
  TraceTable("Profil ligne",
             "Methode de discipline expliqué le pourquoi du comment croisés avec le niveau d'éducation le plus élevés atteint",
             round(a[["prop.row"]],digits = 2))
  TraceTable("Profil colonne", 
             "Methode de discipline expliqué le pourquoi du comment croisés avec le niveau d'éducation le plus élevés atteint",
             round(a[["prop.col"]],digits = 2))
  TraceTable("P-value",
             "Methode de discipline expliqué le pourquoi du comment croisés avec le niveau d'éducation le plus élevés atteint",
             round(data.frame(chi_2 = b[["statistic"]][["X-squared"]] ,p_value = b[["p.value"]], digits = 2 ) ) )  
dev.off()



pdf(file = "test6.PDF",
    width = 6,
    height = 3)
  
  b = chisq.test(tab6)
  a = CrossTable(tab6, na.rm = TRUE)
  TraceTable("Table",
             " ", 
             a[["t"]])
  TraceTable("Table théorique","Methode de discipline: crié ou hurlé  croisés avec le niveau d'éducation le plus élevés atteint",
             round(b[["expected"]],digits = 2))
  TraceTable("Profil ligne",
             "Methode de discipline: crié ou hurlé  croisés avec le niveau d'éducation le plus élevés atteint",
             round(a[["prop.row"]],digits = 2))
  TraceTable("Profil colonne", 
             "Methode de discipline: crié ou hurlé  croisés avec le niveau d'éducation le plus élevés atteint",
             round(a[["prop.col"]],digits = 2))
  TraceTable("P-value",
             "Methode de discipline: crié ou hurlé  croisés avec le niveau d'éducation le plus élevés atteint ",
             round(data.frame(chi_2 = b[["statistic"]][["X-squared"]] ,p_value = b[["p.value"]], digits = 2 ) ) )  
dev.off()



pdf(file = "test7.PDF",
    width = 8,
    height = 3)
  
  b = chisq.test(tab7)
  a = CrossTable(tab7, na.rm = TRUE)
  TraceTable("Table",
             "Methode de discipline : chantage croisés avec le niveau d'éducation le plus élevés atteint", 
             a[["t"]])
  TraceTable("Table théorique",
             "Methode de discipline : chantage croisés avec le niveau d'éducation le plus élevés atteint",
             round(b[["expected"]],digits = 2))
  TraceTable("Profil ligne",
             "Methode de discipline : chantage croisés avec le niveau d'éducation le plus élevés atteint",
             round(a[["prop.row"]],digits = 2))
  TraceTable("Profil colonne", 
             "Methode de discipline : chantage croisés avec le niveau d'éducation le plus élevés atteint",
             round(a[["prop.col"]],digits = 2))
  TraceTable("P-value",
             " ",
             data.frame(chi_2 = b[["statistic"]][["X-squared"]] ,p_value = b[["p.value"]] ) )  
dev.off()

#Pourcentage de valeurs manquantes

v<-apply(menage,1,function(x) sum(is.na(x)))
sum(v)/(nrow(menage)*ncol(menage))
menage


```

```{r ACM Préparation}
#

menage2 <- survey %>% select(cHV201, cHV205, cHV206:cHV209, cHV213, cHV221, cHV226, cHV227, cHV106, cSHCD3B, cSHCD3D, cSHCD3E, cviolence, cHV014)
menage2 <- menage2 %>% drop_na()



menage2[1] <- as.character(menage2[[1]])
menage2[1] <- fct_recode(menage2[[1]],
                         "Internal Source" = "10",
                         "Internal Source" = "11",
                         "Internal Source" = "12",
                         "Internal Source" = "13",
                         "Internal Source" = "14",
                         "Public Source" = "20",
                         "Public Source" = "21",
                         "Public Source" = "30",
                         "Public Source" = "31",
                         "Public Source" = "32",
                         "Public Source" = "40",
                         "Public Source" = "41",
                         "Public Source" = "42",
                         "Public Source" = "43",
                         "Internal Source" = "51",
                         "External Source" = "61",
                         "External Source" = "62",
                         "External Source" = '63',
                         "External Source" = "71",
                         "External Source" = "72",
                         "Other" = '96',
                         NULL = "99"
                         )

menage2[2] <- as.character(menage2[[2]])
menage2[2] <- fct_recode(menage2[[2]],
                         "Flush" = "10",
                         "Flush" = "11",
                         "Flush" = "12",
                         "Flush" = "13",
                         "Flush" = "14",
                         "Flush" = "15",
                         "No Flush" = "20",
                         "No Flush" = "21",
                         "No Flush" = "22",
                         "No Flush" = "23",
                         "No Flush" = "41",
                         "No Flush" = "42",
                         "No Flush" = "43",
                         "Other" = "96",
                         "No toilet" = "30",
                         "No toilet" = "31",
                         NULL = "99"
                         )



menage2[7] <- as.character(menage2[[7]])
menage2[7] <- fct_recode(menage2[[7]],
                         "Natural material" = "10",
                         "Natural material" = "11",
                         "Natural material" = "12",
                         "Natural material" = "20",
                         "Natural material" = "21",
                         "Natural material" = "22",
                         "Natural material" = "30",
                         "Natural material" = "31",
                         "Natural material" = "36",
                         "Natural material" = "37",
                         "Other" = "96",
                         "industrial material" = "31",
                         "industrial material" = "32",
                         "industrial material" = "33",
                         "industrial material" = "34",
                         "industrial material" = "35",
                         NULL = "99"
                         )
                         
menage2[9] <- as.character(menage2[[9]])
menage2[9] <- fct_recode(menage2[[9]],
                         "No natural fuel" = "1",
                         "No natural fuel" = "2",
                         "No natural fuel" = "4",
                         "No natural fuel" = "5",
                         "Natural fuel" = "7",
                         "Natural fuel" = "8",
                         "Natural fuel" = "9",
                         "Natural fuel" = "10",
                         "Natural fuel" = "11",
                         "Natural material" = "37",
                         "Other" = "96",
                         "No food" = "95",
                         "No food" = "96",
                         NULL = "99")

for (i in c(3:6,8,10)){

menage2[i] <- as.character(menage2[[i]])
menage2[i] <- fct_recode(menage2[[i]],
'Yes' = '0',
'No' = '1', 
NULL = '9')
}

menage2[11] <- as.character(menage2[[11]])
menage2[11] <- fct_recode(menage2[[11]],
                          "E0" = "0",
                          "E1" = "1",
                          "E2" = "2",
                          "E3" = "3",
                          NULL = "8",
                          NULL = "9")
                          
                 

menage2[16] <- as.character(menage2[[16]])
menage2[16] <- fct_recode(menage2[[16]],
                          "N0"= "0",
                          "N1"= "1",
                          "N1"= "2",
                          "N3"= "3",
                          "N3"= "4",
                          "N5"= "5",
                          "N5"= "6",
                          "N5"= "7",
                          "N5"= "8",
                          "N5"= "9",
                          "N5"= "10",
                          "N5"= "11",
                          "N5"= "12",
                          "N5"= "13",
                          "N5"= "14",
                          "N5"= "15",
                          "N5"= "16",
                          "N5"= "17",
                          "N5"= "18",
                          "N5"= "19",
                          "N5"= "20")


for (i in c(12:15)){

menage2[i] <- as.character(menage2[[i]])
menage2[i] <- fct_recode(menage2[[i]],
'Yes' = '0',
'No' = '1', 
NULL = '9')
}


menage2 <- menage2 %>% drop_na()

for (i in 1:16) {
  menage2[i] <- as.factor(menage2[[i]])
}

colnames(menage2) <- c("Water", "toilet", "Elec", "Radio", "Tel", "Refre", "floor", "Phone", "fuel", "net", "Educ", "M_pk", "M_cri", "M_chant", "M_vio", "Enf")

menage1 <- menage2 %>% select("Water", "toilet", "Elec", "Radio", "Tel", "Refre", "floor", "Phone", "fuel", "net")



#Pourcentage de menage avec une donnée manquante
1 - nrow(menage2)/nrow(survey)






```

```{r ACM1 Burt}

burt=acm.burt(menage1,menage1)
burt
acm1=MCA(menage1, graph = TRUE, method="Burt")
fviz_mca_var(acm1, col.var = "cos2")


pdf(file = "ACM_Burt.PDF",
    width = 12,
    height = 12)

TraceTable("ACM TDC repr","",round(acm1$var$cos2,digits = 2))
TraceTable("Valeur Propre","",round(acm1$eig, digits=2))
TraceTable("ACM TDC Contr","",round(acm1$var$contrib,digits = 2))
TraceTable("ACM TDC Coord","",round(acm1$var$coord,digits = 2))
fviz_eig(acm1)
fviz_mca_var(acm1, col.var = "cos2")

dev.off()

#Calcul des taux d'inertie modifier
delta = (acm1$eig[1:6,1]-1/10)^2
Itilde=delta/sum(delta);
Itilde

```


```{r ACM2 Disjonctif}

disj=acm.disjonctif(menage1)
disj

acm2=MCA(menage1, graph = TRUE)
fviz_mca_var(acm2, col.var = "cos2")
fviz_eig(acm2)

pdf(file = "ACM_Disj.PDF",
    width = 12,
    height = 12)

TraceTable("Valeur Propre","",round(acm2$eig, digits=2))
TraceTable("ACM TDC repr","",round(acm2$var$cos2,digits = 2))
TraceTable("ACM TDC Contr","",round(acm2$var$contrib,digits = 2))
TraceTable("ACM TDC Coord","",round(acm2$var$coord,digits = 2))

fviz_eig(acm2)
plot(acm2,label = c("var"))

dev.off()



```




```{r ACM3 Supplémentaire}

burt3=acm.burt(menage2,menage2)
burt3
acm3=MCA(menage2, quali.sup = 11:16, graph = TRUE, method="Burt")
fviz_mca_var(acm3, col.var = "cos2")

acm3$quali.sup$v.test

pdf(file = "ACM3.PDF",
    width = 12,
    height = 12)


TraceTable("ACM TDC repr","",round(acm3$quali.sup$cos2,digits = 2))
TraceTable("ACM TDC Coord","",round(acm3$quali.sup$coord,digits = 2))
TraceTable("Table des valeur test", "",round(acm3$quali.sup$v.test, digits=2))
fviz_mca_var(acm3, col.var = "cos2")



dev.off()

plot(acm3,label = c("var"))
